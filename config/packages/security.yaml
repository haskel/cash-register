security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_CASH_REGISTER

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        backend_users:
            memory:
                users:
                    admin: { password: '$2y$13$1kL9jTJWl8Ftefj6DEhyP.7jxcPDH8Q5cpyHDuD58NOJaTBQRWmpO', roles: ['ROLE_ADMIN'] }
                    user: { password: '$2y$13$h8oWW/3YCrE0K4VrwnxemekDG8j.PrV9HPpOIKBgABm4DzmR02yqO', roles: ['ROLE_CASH_REGISTER'] }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/(product|report), roles: ROLE_ADMIN }
        - { path: ^/cash-register, roles: ROLE_CASH_REGISTER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
